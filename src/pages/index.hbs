<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" type="text/css" href="/style.css" />
  <style>
    #camera-container { display: none; position: relative; width: 220px; height: 400px; border: 1px solid #ccc; overflow: hidden; margin: 10px auto; }
    #camera { width: 100%; height: 100%; object-fit: cover; }
    .search-container { display: flex; align-items: center; flex-wrap: wrap; }
    #searchInput { margin-right: 10px; flex-grow: 1; }
    #clearSearchButton, #searchButton, #startScanButton, #stopScanButton { height: 30px; }
    #searchResults { width: 100%; margin-top: 10px; }
  </style>
</head>
<body>
  <div id="camera-container">
    <video id="camera" autoplay playsinline autofocus></video>
  </div>
  <div class="button-container">
    <div class="file-container">
      <input type="file" id="mergeFilesInput" accept=".pdf" multiple style="display: none;" />
      <button id="mergeFilesButton">UPLOAD PDFs FOR MERGE</button>
      <input type="file" id="onePdfInput" accept=".pdf" style="display: none;" />
      <button id="onePdfButton">Upload Single PDF</button>
      <div id="spinnerOnepdf" class="spinner hidden"></div>
      <p id="messageOnepdf"></p>
      <!-- Single CSV upload -->
      <form id="csvUploadForm" action="/upload-csv-single" method="post" enctype="multipart/form-data" style="margin-top:8px;">
        <input type="file" id="csvUploadInput" name="csv" accept=".csv" style="display:none;">
        <button type="button" id="csvUploadButton">Upload CSV</button>
      </form>
      <!-- Multiple CSV upload -->
      <form id="csvMergeForm" action="/upload-csv-multiple" method="post" enctype="multipart/form-data" style="margin-top:8px;">
        <input type="file" id="csvMergeInput" name="csvs" accept=".csv" multiple style="display:none;">
        <button type="button" id="csvMergeButton">Upload & Merge CSVs</button>
      </form>
    </div>
    <div class="spinner hidden" id="spinnerMerge"></div>
    <div id="messageMerge"></div>
  </div>
  <div class="button-container">
    <div class="file-container">
      <input type="file" id="singleFileInput" accept=".pdf" style="display: none;" />
      <button id="extractButton">EXTRACT TABLES</button>
    </div>
    <div class="spinner hidden" id="spinnerSingle"></div>
    <div id="messageSingle"></div>
  </div>
  <div class="button-container">
    <div class="control-buttons">
      <button id="downloadCsvButton" style="display:none">Download CSV</button>
      <button id="getTotalButton">Get Total</button>
      <div id="totalResultBox"></div>
    </div>
  </div>
  <div class="button-container">
    <div class="control-buttons">
      <button id="restartButton">Restart</button>
    </div>
  </div>
  <div class="button-container">
    <button id="downloadMergedButton" style="display:none">Download Merged PDF</button>
  </div>
  <button id="displayCurrentInvoiceButton">Display Current Invoice</button>
  <button id="showAllEmbeddedButton">Show all Embedded</button>
<label style="margin-left: 10px;">
  <input type="checkbox" id="selectAllCheckbox"> Select All
</label>
  <div class="search-container">
    <input type="text" id="searchInput" placeholder="Search by text or barcode" style="width: 200px; height: 40px;" />
    <button id="clearSearchButton">X</button>
    <button id="searchButton">Search</button>
    <button id="startScanButton">Start Scan</button>
    <button id="stopScanButton">Stop Scan</button>
    <div id="searchResults"></div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/fuse.js"></script>
  <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest/umd/index.min.js"></script>
  <script src="/script.js"></script>
  <script>
    // Barcode scan JS (as before)
    let videoStream;
    let codeReader = new ZXing.BrowserMultiFormatReader();
    function startScan() {
      let selectedDeviceId;
      let videoElem = document.createElement('video');
      videoElem.id = 'camera';
      document.getElementById('camera-container').appendChild(videoElem);
      codeReader.listVideoInputDevices().then((videoInputDevices) => {
        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
        const constraints = isMobile
          ? { video: { facingMode: 'environment', width: { ideal: 220 }, height: { ideal: 400 } } }
          : { video: { deviceId: videoInputDevices[0].deviceId } };
        selectedDeviceId = constraints;
        codeReader.decodeFromConstraints(constraints, 'camera', (result, err) => {
          if (result) {
            document.getElementById('searchInput').value = result.text;
            playBeep();
            codeReader.reset();
            let cameraContainer = document.getElementById('camera-container');
            if (cameraContainer) cameraContainer.style.display = 'none';
          }
        });
        document.getElementById('camera-container').style.display = 'block';
      }).catch((err) => { console.error(err); });
    }
    function stopScan() {
      codeReader.reset();
      document.getElementById('searchInput').value = '';
      let cameraContainer = document.getElementById('camera-container');
      if (cameraContainer) cameraContainer.style.display = 'none';
    }
    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    function playBeep() {
      const oscillator = audioContext.createOscillator();
      oscillator.type = 'sine';
      oscillator.frequency.setValueAtTime(1000, audioContext.currentTime);
      oscillator.connect(audioContext.destination);
      oscillator.start();
      oscillator.stop(audioContext.currentTime + 0.1);
    }
    document.getElementById('startScanButton').addEventListener('click', startScan);
    document.getElementById('stopScanButton').addEventListener('click', stopScan);
  </script>

  <!-- Invoice Info & Table Section -->
  <div class="invoice-info-section">
    <label for="invoiceNumber" class="left-align" id="invoiceNumberLabel">Invoice Number:</label>
    <input type="text" id="invoiceNumber" />
    <label for="currentDate" class="left-align" id="currentDateLabel">Date:</label>
    <input type="text" id="currentDate" readonly />
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const currentDateInput = document.getElementById("currentDate");
        const currentDate = new Date();
        const formattedDate = currentDate.toLocaleDateString("en-GB", {
          day: "2-digit",
          month: "long",
          year: "numeric",
        });
        currentDateInput.value = formattedDate;
      });
    </script>
    <label for="customerName" class="left-align" id="customerNameLabel">Customer Name:</label>
    <input type="text" id="customerName" />
  </div>
  <table id="invoiceTable">
    <thead>
      <tr>
        <th>#</th>
        <th class="column-description">Item Description</th>
        <th class="column-quantity">Quantity</th>
        <th class="column-price">Price</th>
        <th class="column-total">Total</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
  <div>
    <button onclick="addItemToInvoice()">Add Item</button>
    <button onclick="printInvoice()">Print</button>
    <button onclick="saveInvoice()">Save Invoice</button>
    <button onclick="loadSavedInvoiceByNumber()">Load Saved Invoice</button>
  </div>
  <div id="customModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div id="modalMessage"></div>
      <button onclick="getProfitPercentage()">OK</button>
      <input type="number" class="form-control" id="profitInput" step="0.01">
    </div>
  </div>
  <button id="goToIndexButton" onclick="goToIndexPage()">Reset Page Invoice</button>
  <script>
    function goToIndexPage() { window.location.href = "/"; }
    // The invoice logic is now in script.js!
  </script>
</body>
</html>